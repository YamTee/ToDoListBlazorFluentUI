@inherits LayoutComponentBase

<FluentDesignSystemProvider @ref="designRef">

    <FluentHeader>ToDo List</FluentHeader>
    @Body

    <FluentFooter>Bye</FluentFooter>

    <FluentToastProvider />
    <FluentDialogProvider />
    <FluentTooltipProvider />
    <FluentMessageBarProvider />

</FluentDesignSystemProvider>

@code{
    [Inject]
    private BodyFont BodyFont { get; set; } = default!;

	[Inject]
	private BaseLayerLuminance BaseLayerLuminance { get; set; } = default!;

	private FluentDesignSystemProvider? designRef;

	protected override async Task OnAfterRenderAsync(bool firstRender)
	{
		if (firstRender)
		{
			// //Set to dark mode
			// await BaseLayerLuminance.SetValueFor(designRef!.Element, (float)0.15);

			//Set to Excel color
			//await AccentBaseColor.SetValueFor(ref2!.Element, "#185ABD".ToSwatch());

			//Set the font
			await BodyFont.SetValueFor(designRef!.Element, "Inter");

			//Set 'border' width for ref4
			//await StrokeWidth.SetValueFor(ref4!.Element, 7);
			//And change conrner radius as well
			//await ControlCornerRadius.SetValueFor(ref4!.Element, 15);

			// If you would like to change the BaseLayerLuminance  value for the whole site, you can use the WithDefault method
			await BaseLayerLuminance.WithDefault((float)1);

			StateHasChanged();
		}
	}
}